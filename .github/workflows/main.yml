name: Deploy to DigitalOcean

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          yarn install
          yarn run build

      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: 209.38.251.202
          username: root
          key: ${{ secrets.DO_SSH_KEY }}
          script: |
            rm -f /root/my-strapi-app/.env
            # Set environment variables for Strapi
            echo "APP_KEYS=${{ secrets.APP_KEYS }}" >> /root/my-strapi-app/.env
            echo "ADMIN_JWT_SECRET=${{ secrets.ADMIN_JWT_SECRET }}" >> /root/my-strapi-app/.env
            echo "JWT_SECRET=${{ secrets.JWT_SECRET }}" >> /root/my-strapi-app/.env
            echo "DATABASE_CLIENT=${{ secrets.DATABASE_CLIENT }}" >> /root/my-strapi-app/.env
            echo "DATABASE_HOST=${{ secrets.DATABASE_HOST }}" >> /root/my-strapi-app/.env
            echo "DATABASE_PORT=${{ secrets.DATABASE_PORT }}" >> /root/my-strapi-app/.env
            echo "DATABASE_NAME=${{ secrets.DATABASE_NAME }}" >> /root/my-strapi-app/.env
            echo "DATABASE_USERNAME=${{ secrets.DATABASE_USERNAME }}" >> /root/my-strapi-app/.env
            echo "DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }}" >> /root/my-strapi-app/.env
            echo "DATABASE_SSL=${{ secrets.DATABASE_SSL }}" >> /root/my-strapi-app/.env
            echo "DATABASE_FILENAME=${{ secrets.DATABASE_FILENAME }}" >> /root/my-strapi-app/.env
            echo "TRANSFER_TOKEN_SALT=${{ secrets.TRANSFER_TOKEN_SALT }}" >> /root/my-strapi-app/.env
            echo "API_TOKEN_SALT=${{ secrets.API_TOKEN_SALT }}" >> /root/my-strapi-app/.env

            # Pull latest changes and restart Strapi app
            cd /root/my-strapi-app
            git pull origin main
            yarn install --production
            pm2 restart all
            docker-compose down
            docker-compose --env-file /root/my-strapi-app/.env up -d
